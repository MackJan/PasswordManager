services:
  grafana:
    image: grafana/grafana:latest
    ports: [ "3000:3000" ]
    environment:
      GF_SECURITY_ADMIN_USER: "admin"
      GF_SECURITY_ADMIN_PASSWORD: "test_password!"
      GF_AUTH_ANONYMOUS_ENABLED: "false"
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - monitoring
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.0
    ports: [ "3100:3100" ]
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml:ro
      - loki_data:/tmp/loki
    environment:
      - LOKI_API_KEY=secure_api_key_123
    networks:
      - monitoring
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.0
    command: -config.file=/etc/promtail/config.yaml
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail-config.yaml:/etc/promtail/config.yaml:ro
      - ./password_manager/logs:/var/log/django:ro
    environment:
      - LOKI_API_KEY=secure_api_key_123
    networks:
      - monitoring
    restart: unless-stopped

  web:
    build:
      context: ./password_manager
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./password_manager/:/usr/src/app/
    ports:
      - "8000:8000"
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - loki
    networks:
      - default
      - monitoring
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=django
      - POSTGRES_PASSWORD=django
      - POSTGRES_DB=django_dev
    ports:
      - "5432:5432"
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  grafana-data:
  loki_data:

networks:
  monitoring:
    driver: bridge
